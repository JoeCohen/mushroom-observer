<%
  # IMPORTANT: Sometimes it's prohibitive to do the extra join to images table,
  # so we only have image_id.  It's still possible to render the image with
  # nothing but the image_id.  (But not votes, original name, etc.)
  image, image_id = image.is_a?(Image) ? [image, image.id] : [nil, image]
  size_url   = Image.url(size, image_id)
  medium_url = Image.url(:medium, image_id)
  large_url  = Image.url(:large, image_id)
  huge_url   = Image.url(:huge, image_id)
  full_url   = Image.url(:full_size, image_id)
  orig_url   = Image.url(:original, image_id)
  # If the image is part of an image set.
  is_set = is_set || false

  # Lightbox stuff:
  lightbox_id = is_set ? "observation-set" : SecureRandom.uuid
  show_orig = "<a href='#{orig_url}' target='_blank' class='lightbox_link'>#{:image_show_original.t}</a>"
  show_exif = "<a href='javascript:popup_exif(#{image_id})' class='lightbox_link'>#{:image_show_exif.t}</a>"
  caption = "#{show_orig} | #{show_exif}".html_safe

  # Show original name?
  show_original_name = original && image && !image.original_name.blank? &&
    (check_permission(image) || image.user && image.user.keep_filenames == "keep_and_show")
  # NOTE: The local var `link` might be to #show_image as you'd expect,
  # or it may be a GET with params[:img_id] to the actions for #reuse_image
  # or #remove_image ...or any other link. Firing a POST to those actions
  # might require printing a Rails post_button and putting something like
  # Bootstrap's .stretched-link class on the generated form input.
  # However, the whole reuse_image page is currently a form - refactor?

  # CHANGES -
  # remove responsive param, all responsive
  # FIXME: Pass a srcset attribute, or symbol, from context for true responsive
  image_link = case link_method
                when :get
                  link_with_query("", link, class: "image-link ab-fab")
                when :post
                  post_button(name: "", path: link, class: "image-link ab-fab")
                when :put
                  put_button(name: "", path: link, class: "image-link ab-fab")
                when :patch
                  patch_button(name: "", path: link, class: "image-link ab-fab")
                when :delete
                  destroy_button(name: "", target: link,
                                           class: "image-link ab-fab")
                end
%>

<div class="position-relative">
  <div class="d-inline">
    <div data-toggle="expand-icon" class="text-center">
      <div class="click-container position-relative">
        <%= image_tag(size_url, title: notes,
                      class: "img-fluid #{extra_classes}",
                      data: { toggle: "tooltip", placement: "bottom" }) %>
        <%= image_link %>
      </div>
      <%= link_to("", huge_url,
                  class: "glyphicon glyphicon-fullscreen theater-btn",
                  data: { lightbox: lightbox_id, title: caption }) %>
      <div class="mt-3">
        <% if User.current and votes and image %>
          <%= render(partial: "shared/image_vote_links",
                     locals: { image: image }) %>
        <% end %>
        <% if show_original_name %>
          <div class="text-center">
            <span><%= image.original_name %></span>
          </div><!-- .text-center -->
        <% end %>
      </div>
    </div>
  </div>
</div>
